<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on darryl gibbs</title>
        <link>https://dgibbs.me/posts/</link>
        <description>Recent content in Posts on darryl gibbs</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Mon, 29 Mar 2021 13:56:37 -0300</lastBuildDate>
        <atom:link href="https://dgibbs.me/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>How to install InvoiceNinja on Ubuntu Server</title>
            <link>https://dgibbs.me/posts/2021/03/how-to-install-invoiceninja-on-ubuntu-server/</link>
            <pubDate>Mon, 29 Mar 2021 13:56:37 -0300</pubDate>
            
            <guid>https://dgibbs.me/posts/2021/03/how-to-install-invoiceninja-on-ubuntu-server/</guid>
            <description>This is a tutorial I&amp;rsquo;ve written mostly for my own purposes that I have adapted from the orginal post from [TechnicallyComputers&#39; forum post]([Install Invoice Ninja v5 on Ubuntu 20.04 - v5 Self-hosted - Discourse). Kudos to him!
Prerequisites   Fresh Ubuntu Server install on a VPS / VM with sudo access.
  Optional: A domain pointed at the server.
  Install necessary (and extra) software First, update the system.</description>
            <content type="html"><![CDATA[<p>This is a tutorial I&rsquo;ve written mostly for my own purposes that I have adapted from the orginal post from <strong>[TechnicallyComputers' forum post]([<a href="https://forum.invoiceninja.com/t/install-invoice-ninja-v5-on-ubuntu-20-04/4588">Install Invoice Ninja v5 on Ubuntu 20.04 - v5 Self-hosted - Discourse</a>)</strong>. Kudos to him!</p>
<h2 id="prerequisites">Prerequisites</h2>
<ul>
<li>
<p>Fresh Ubuntu Server install on a VPS / VM with sudo access.</p>
</li>
<li>
<p>Optional: A domain pointed at the server.</p>
</li>
</ul>
<h2 id="install-necessary-and-extra-software">Install necessary (and extra) software</h2>
<p>First, update the system.</p>
<pre><code>sudo apt upgrade -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt clean &amp;&amp; sudo apt autoremove -y &amp;&amp; sudo reboot
</code></pre><p>Then, install software we will use for the server. Note: Setup of fail2ban and UFW I&rsquo;m going to leave to you.  You can see my post on setting up Chamilo LMS where I cover that.</p>
<pre><code>sudo apt install -y ufw \
fail2ban \
unzip \
zip \
git \
tree \
openssh-server \
net-tools \
curl \
software-properties-common
</code></pre><p>And some specific software we will need for this setup?</p>
<pre><code>sudo apt install gcc g++ make php php-{fpm,bcmath,ctype,fileinfo,json,mbstring,pdo,tokenizer,xml,curl,zip,gmp,gd,mysqli} mariadb-server mariadb-client curl git nginx vim -y
</code></pre><p>Download and install PHP Composer</p>
<pre><code>curl -sS https://getcomposer.org/installer -o composer-setup.php &amp;&amp; \
sudo php composer-setup.php --install-dir=/usr/bin --filename=composer
</code></pre><h2 id="setup-maria-db-and-the-database">Setup Maria DB and the Database</h2>
<p>Ok, now fire up MariaDB and also make it start up automatically with the system on reboot.  THe last command will start the securing of the DB root account.</p>
<pre><code>sudo systemctl start mariadb
sudo systemctl enable mariadb
sudo mysql_secure_installation
</code></pre><p>Follow the below to know how to handle all the questions.</p>
<pre><code>Enter current password for root (enter for none): strong-ass-MariaDB-root-password
Change the root password? [Y/n]: n
Remove anonymous users? [Y/n]: y
Disallow root login remotely? [Y/n]: y
Remove test database and access to it? [Y/n]: y
Reload privilege tables now? [Y/n]: y
</code></pre><pre><code>sudo mysql -u root -p

CREATE DATABASE ninjadb;
CREATE USER 'ninja'@'localhost' IDENTIFIED BY 'ninjapassword';
GRANT ALL PRIVILEGES ON ninjadb.* TO 'ninja'@'localhost' IDENTIFIED BY 'ninjapassword' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EXIT;
</code></pre><p>Make sure to update at least the <strong>password</strong> with your prefered choice, and the DB name and user should you wish to.</p>
<h2 id="install-nginx-webserver">Install Nginx (webserver)</h2>
<p>First, let&rsquo;s remove the stock Nginx page to avoid confusion.</p>
<pre><code>sudo rm /etc/nginx/sites-enabled/default
</code></pre><p>Now let&rsquo;s add our own <code>.conf</code> file specifically for our project</p>
<pre><code>sudo nano /etc/nginx/conf.d/invoiceninja.conf
</code></pre><p>And now copy in the below, and edit as per your needs, namely: <strong>port number</strong> (normally this is set to port 80, but mine is set to something random for my own purposes), and <strong>FQDN</strong> (domain name).</p>
<pre><code>server {
        listen 10000 default_server;
        listen [::]:10000 default_server;

        root /var/www/html/invoiceninja/public;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm;
        client_max_body_size 50M;
        gzip on;
        gzip_types      application/javascript application/x-javascript text/javascript text/plain application/xml application/json;
        gzip_proxied    no-cache no-store private expired auth;
        gzip_min_length 1000;


        server_name invoice.example.com_;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }


        if (!-e $request_filename) {
            rewrite ^(.+)$ /index.php?q= last;
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
                deny all;
        }
}
</code></pre><p>The eagle eyed among you will see that it&rsquo;s not complex, and that&rsquo;s because I&rsquo;ll have mine setup behind a reverse proxy.  But if you need a complete <code>.conf</code> assumming that this is the sole purpose of the machine this is running on, see the config mentioned within the link at the beginning of the post.</p>
<p>Then start and enable Nginx after killing Apache.</p>
<pre><code>sudo systemctl stop apache2
sudo systemctl disable apache2
sudo systemctl start nginx
sudo systemctl enable nginx
</code></pre><p>Test the nginx config to make sure all is well:</p>
<pre><code>sudo nginx -t
</code></pre><h2 id="get-invoice-ninja-files">Get Invoice Ninja files</h2>
<p>Visit the [invoiceninja github release page](<a href="https://github.com/invoiceninja/invoiceninja/releases">Releases · invoiceninja/invoiceninja · GitHub</a>) and get the latest <strong>-release</strong> version zip file.</p>
<pre><code>cd /var/www/html
sudo mkdir invoiceninja &amp;&amp; cd invoiceninja
sudo wget https://github.com/invoiceninja/invoiceninja/releases/download/v5.1.32-release/invoiceninja.zip
sudo unzip invoiceninja.zip
</code></pre><h3 id="installing-and-configuring-software-and-dependencies">Installing and configuring software and dependencies</h3>
<p>First move to the webroot for InvoiceNinja if not done so already.</p>
<pre><code>cd /var/www/html/invoiceninja
</code></pre><p>Then run the compose.  This is needed for InvoiceNinja to work.</p>
<pre><code>sudo php /usr/bin/composer install --no-dev
</code></pre><p>If you&rsquo;re short on memory, run this bad boy:    </p>
<pre><code>sudo php -d memory_limit=-1 `which composer` install --no-dev
</code></pre><p>This will generate a <em>.env</em> file with an encryption key. Wait while this runs.</p>
<p>Then add that encryption key to the <em>.env</em>. Then run the auto config process.  This <strong>must</strong> be repeated if files are moved or changed in the invoiceninja directory.</p>
<pre><code>sudo php artisan key:generate
sudo php artisan optimize
</code></pre><p>Lastly, set folder permissions.</p>
<pre><code>sudo chown -R www-data:www-data /var/www/html/invoiceninja
sudo chmod -R g+s /var/www/html/invoiceninja
</code></pre><p>InvoiceNinja requires some regular maintenance to take place.  Failing to do so will place a bright red exclamation logo in the bottom left of the InvoiceNinja interface.  This all takes place in <code>crontab -e</code>. Note: until you <code>reboot</code> the system, the exclamation will remain.</p>
<pre><code>sudo -u www-data crontab -e
</code></pre><p>Insert this:</p>
<pre><code>* * * * * php /var/www/html/invoiceninja/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1
</code></pre><p>Some folks have issues generating PDF&rsquo;s.  Should you have these issues, the below dependencies could fix that.</p>
<pre><code>sudo apt-get install gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
</code></pre><p>Reboot.</p>
<pre><code>sudo reboot
</code></pre><p>And finally, visit your IP/domain and complete the setup.</p>
<h2 id="conclusion">Conclusion</h2>
<p>That&rsquo;s it! All should be working now.</p>
]]></content>
        </item>
        
        <item>
            <title>How to Install Chamilo on Ubuntu Server</title>
            <link>https://dgibbs.me/posts/2020/12/how-to-install-chamilo-on-ubuntu-server/</link>
            <pubDate>Fri, 18 Dec 2020 12:00:37 -0300</pubDate>
            
            <guid>https://dgibbs.me/posts/2020/12/how-to-install-chamilo-on-ubuntu-server/</guid>
            <description>This is a tutorial I&amp;rsquo;ve written mostly for my own purposes that I have adapted from the orginal post from [Vultr](How to Install Chamilo 1.11.8 on Ubuntu 18.04 LTS - Vultr.com). Kudos to those guys.
Prerequisites   Fresh Ubuntu Server install on a VPS with sudo access.
  A domain pointed at the server.
  Install necessary (and extra) software First, update the system.
sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt dist-upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -y &amp;amp;&amp;amp; sudo apt clean -y &amp;amp;&amp;amp; sudo reboot Then, install software we will use for the server.</description>
            <content type="html"><![CDATA[<p>This is a tutorial I&rsquo;ve written mostly for my own purposes that I have adapted from the orginal post from <strong>[Vultr](<a href="https://www.vultr.com/docs/how-to-install-chamilo-1-11-8-on-ubuntu-18-04-lts">How to Install Chamilo 1.11.8 on Ubuntu 18.04 LTS - Vultr.com</a>)</strong>. Kudos to those guys.</p>
<h2 id="prerequisites">Prerequisites</h2>
<ul>
<li>
<p>Fresh Ubuntu Server install on a VPS with sudo access.</p>
</li>
<li>
<p>A domain pointed at the server.</p>
</li>
</ul>
<h2 id="install-necessary-and-extra-software">Install necessary (and extra) software</h2>
<p>First, update the system.</p>
<pre><code>sudo apt upgrade -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y &amp;&amp; sudo apt clean -y &amp;&amp; sudo reboot
</code></pre><p>Then, install software we will use for the server.</p>
<pre><code>sudo apt install -y ufw \
fail2ban \
unzip \
zip \
git \
tree \
openssh-server \
net-tools \
curl \
software-properties-common
</code></pre><h2 id="update-ufw-firewall-rules">Update UFW firewall rules</h2>
<pre><code>sudo ufw allow in ssh &amp;&amp; \
sudo ufw allow in http &amp;&amp; \
sudo ufw allow in https &amp;&amp; \
sudo ufw enable
</code></pre><h2 id="install-setup-and-secure-mariadb">Install, setup and secure MariaDB</h2>
<p>To install the latest version of MariaDB directly, you will need to add the MariaDB repos. Confirm the latest version <a href="https://mariadb.org/download/">here</a>, and update the version number and Ubuntu version as needed.</p>
<pre><code>sudo apt install -y software-properties-common &amp;&amp; \
sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8 &amp;&amp; \
sudo add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://mirrors.accretive-networks.net/mariadb/repo/10.5/ubuntu focal main' &amp;&amp; \
sudo apt update &amp;&amp; \
sudo apt install -y mariadb-server
</code></pre><p>During the install, provide a strong password for MariaDB. If not requested, no sweat, we&rsquo;ll secure it in the next block.</p>
<p>Ok, now fire up MariaDB and also make it start up automatically with the system on reboot:</p>
<pre><code>sudo systemctl start mariadb.service
sudo systemctl enable mariadb.service
</code></pre><p>Now, let&rsquo;s secure MariaDB:</p>
<pre><code>sudo /usr/bin/mysql_secure_installation
</code></pre><p>A prompt will come up, answer as below, but remember to provide a <strong>strong</strong> root password now if not done so previously.</p>
<pre><code>Enter current password for root (enter for none): strong-ass-MariaDB-root-password
Change the root password? [Y/n]: n
Remove anonymous users? [Y/n]: y
Disallow root login remotely? [Y/n]: y
Remove test database and access to it? [Y/n]: y
Reload privilege tables now? [Y/n]: y
</code></pre><h2 id="install-apache">Install Apache</h2>
<pre><code>sudo apt install -y apache2
</code></pre><p>Go to the server URL to confirm Apache is up and running.</p>
<p>Remove the standard Apache welcome page.</p>
<pre><code>sudo mv /var/www/html/index.html /var/www/html/index.html.old
</code></pre><p>Backup the default .conf file and block Apache from exposing the web root directory:</p>
<pre><code>sudo cp /etc/apache2/apache2.conf /etc/apache2/apache2.conf.bak
sudo sed -i &quot;s/Options Indexes FollowSymLinks/Options FollowSymLinks/&quot; /etc/apache2/apache2.conf
</code></pre><p>Enable the Apache rewrite module, start the service and auto-start</p>
<pre><code>sudo a2enmod rewrite
sudo systemctl start apache2.service
sudo systemctl enable apache2.service
</code></pre><h2 id="install-latest-php-packages">Install latest PHP Packages</h2>
<p>In order to run the latest PHP 7.x packages, we need to add the repo:</p>
<pre><code>sudo add-apt-repository -y ppa:ondrej/php
sudo apt update
sudo apt upgrade -y
sudo apt autoremove -y
</code></pre><p>Install the latest 7.4 packages. Before doing so, confirm the latest version <a href="https://www.php.net/downloads.php">here</a>, and if higher the 7.4, substitute that version wherever you see <strong>7.4</strong>.</p>
<pre><code>sudo apt install -y php7.4 php7.4-opcache php7.4-cli php7.4-curl php7.4-common php7.4-gd php7.4-intl php7.4-mbstring php7.4-mysql libapache2-mod-php7.4 php7.4-soap php7.4-xml php7.4-xmlrpc php7.4-zip php7.4-ldap php-apcu-bc
</code></pre><p>Backup and then edit the PHP config file pertaining to Apache:</p>
<pre><code>sudo cp /etc/php/7.4/apache2/php.ini /etc/php/7.4/apache2/php.ini.bak
sudo sed -i 's#;date.timezone =#date.timezone = America/Sao_Paulo#' /etc/php/7.4/apache2/php.ini
</code></pre><p>Right, now let&rsquo;s adjust the php.ini file to meet the necessities of Chamilo LMS:</p>
<pre><code>sudo nano /etc/php/7.4/apache2/php.ini
</code></pre><p>Find these:</p>
<pre><code>session.cookie_httponly =
upload_max_filesize = 2M
post_max_size = 8M
</code></pre><p>And update them to look like these:</p>
<pre><code>session.cookie_httponly = 1
upload_max_filesize = 100M
post_max_size = 100M
</code></pre><h2 id="install-chamilo">Install Chamilo</h2>
<h3 id="setup-the-database">Setup the Database</h3>
<pre><code>sudo mysql -u root -p

CREATE DATABASE chamilo;
CREATE USER 'chamilo'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON chamilo.* TO 'chamilo'@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EXIT;
</code></pre><p>Make sure to update at least the <strong>password</strong> with your prefered choice, and the DB name and user should you wish to.</p>
<h3 id="get-chamilo-files">Get Chamilo files</h3>
<p>Let&rsquo;s now head to <a href="https://github.com/chamilo/chamilo-lms/releases">Chamilo&rsquo;s GitHub page</a> to confirm we have the latest version. Update the link and steps below as needed:</p>
<pre><code>cd
wget https://github.com/chamilo/chamilo-lms/releases/download/v1.11.14/chamilo-1.11.14.tar.gz
</code></pre><p>Extract all the files to the <em>/opt</em> directory:</p>
<pre><code>sudo tar -zxvf chamilo-1.11.14.tar.gz -C /opt
</code></pre><p>Create a symbolic link between the unzip directory and the webserver root directory&quot;</p>
<pre><code>sudo ln -s /opt/chamilo-lms-1.11.14 /var/www/html/chamilo
</code></pre><p>Modify the ownership of all Chamilo files to the <code>www-data</code> user and the <code>www-data</code> group:</p>
<pre><code>sudo chown -R www-data:www-data /opt/chamilo-lms-1.11.14
</code></pre><h3 id="configure-apache-virtual-server-for-chamilo">Configure Apache virtual server for Chamilo</h3>
<pre><code>cat &lt;&lt;EOF | sudo tee /etc/apache2/sites-available/chamilo.conf
&lt;VirtualHost *:80&gt;
ServerAdmin admin@example.com
DocumentRoot /var/www/html/chamilo
ServerName chamilo.example.com
ServerAlias example.com
&lt;Directory /&gt;
AllowOverride All
Require all granted
&lt;/Directory&gt;
&lt;Directory /var/www/html/chamilo&gt;
Options FollowSymLinks
AllowOverride All
Require all granted
&lt;/Directory&gt;
ErrorLog /var/log/apache2/chamilo.example.com-error_log
CustomLog /var/log/apache2/chamilo.example.com-access_log common
&lt;/VirtualHost&gt;
EOF
</code></pre><p>Update the <strong>ServerAdmin</strong>, <strong>ServerName</strong>, <strong>ServerAlias</strong>, <strong>ErrorLog</strong> and <strong>CustomLog</strong> as necessary.</p>
<p>Then, create the symbolic links to the <code>/etc/apache2/sites-enabled</code> directory, while deleting the Apache default link.</p>
<pre><code>sudo rm /etc/apache2/sites-enabled/000-default.conf
sudo ln -s /etc/apache2/sites-available/chamilo.conf /etc/apache2/sites-enabled/
</code></pre><p>Finally, restart Apache so all the changes are activated.</p>
<pre><code>sudo systemctl restart apache2.service
</code></pre><h3 id="complete-the-install-in-the-browser">Complete the install in the browser</h3>
<p>Open up your browser and navigate to your server, for example: <code>http://chamilo.iamamazing.com</code>, and click on <strong>Install Chamilo</strong>. From here on, fill out the details as requested, but here is a quick guide for you.</p>
<ul>
<li><code>Step 1 - Installation Language</code>: Choose the language of choice and then click the <code>Next</code> button.</li>
<li><code>Step 2 – Requirements</code>: Make sure that all mandatory requirements have been met, and then click the <code>New installation</code> button.</li>
<li><code>Step 3 – Licence</code>: Read the licence if you dare, and the click the checkbox next to the <code>I agree</code> sentence, fill in all required fields, and then click the <code>Next</code> button.</li>
<li><code>Step 4 – MySQL database settings</code>: Input the database credentials we setup earlier and then click the <code>Check database connection</code> button to verify them. Click the <code>Next</code> button to move on.</li>
<li><code>Step 5 – Config settings</code>: Modify the
pre-set administrator password, fill in the other fields accordingly, and then click the <code>Next</code> button.</li>
<li><code>Step 6 – Last check before install</code>: Review all of the settings and hit the <code>Install Chamilo</code> button to start the web installation.</li>
<li><code>Step 7 – Installation process execution</code>: When Chamilo is successfully installed, click the <code>Go to your newly created portal.</code> button to finish the web installation wizard.</li>
</ul>
<h3 id="post-install-safety-measure-do-not-skip-this">Post-Install Safety Measure: DO NOT SKIP THIS!!!</h3>
<p>In order to tighten security of the installation folders, we need to change their permissions:</p>
<pre><code>sudo chmod -R 0555 /var/www/html/chamilo/app/config
sudo rm -rf /var/www/html/chamilo/main/install
</code></pre><h2 id="fail2ban">Fail2Ban</h2>
<p>Sourced from: <a href="https://www.howtogeek.com/675010/how-to-secure-your-linux-computer-with-fail2ban/">How to Secure Your Linux Server with fail2ban</a><a href="https://www.howtogeek.com/675010/how-to-secure-your-linux-computer-with-fail2ban/">How to Secure Your Linux Server with fail2ban</a></p>
<p>Firstly, install fail2ban.</p>
<pre><code>sudo apt-get install fail2ban
</code></pre><h3 id="configuring-fail2ban">Configuring fail2ban</h3>
<p>fail2ban creates &lsquo;jails&rsquo; in .conf files. This standard config is removed each time fail2ban upgrades, so we&rsquo;ll make a customized file.</p>
<p>So, lets make a copy of the default file and then edit our own version.</p>
<pre><code>sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
sudo nano /etc/fail2ban/jail.local
</code></pre><p>Scroll down to the <strong>[DEFAULT]</strong> and <strong>[sshd]</strong> sections, that come up from about line 90 onwards. It appears near the top too, but ignore that. Find the following lines and update as below. See the source link above for further details of each.</p>
<p>[DEFAULT] section:</p>
<pre><code>ignoreip = 127.0.0.1/8 ::1

bantime = 24h

findtime = 5m

maxretry = 3
</code></pre><p>[sshd] section: <strong>ADD</strong> these 2 lines to the end of the [sshd] section.</p>
<pre><code>maxretry = 3
enable = true
</code></pre><h3 id="enable-fail2ban">Enable fail2ban</h3>
<p>Enable the service and auto-start.</p>
<pre><code>sudo systemctl enable fail2ban
sudo systemctl start fail2ban
</code></pre><p>Check that fail2ban is working.</p>
<pre><code>sudo systemctl status fail2ban.service
</code></pre><p>Check fail2ban status. This should show the active jail.</p>
<pre><code>sudo fail2ban-client status
</code></pre><p>To show the exact status of the jail we activated. It will show any IPs that are banned.</p>
<pre><code>sudo fail2ban-client status sshd
</code></pre><p>Testing the jail: see source link above.</p>
<h3 id="unbanning-an-ip">Unbanning an IP</h3>
<p>After seeing the banned IP from above, use the command below, inserting the appropriate IP.</p>
<pre><code>sudo fail2ban-client set sshd unbanip 192.168.4.25
</code></pre><p>Now it can try again.</p>
<h2 id="lets-encrypt-certificate">Let&rsquo;s Encrypt Certificate</h2>
<p>This part is adapted from a [Digital Ocean tutorial](<a href="https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-20-04">How To Secure Apache with Let's Encrypt on Ubuntu 20.04 | DigitalOcean</a>).</p>
<h3 id="certbot-setup">Certbot setup</h3>
<p>SSL certs are a <strong>must have</strong> so let&rsquo;s hook them up.</p>
<p>Firstly, install the certbot.</p>
<pre><code>sudo apt install -y certbot python3-certbot-apache
</code></pre><p>Confirm your <code>ServerName</code> and <code>ServerAlias</code> details in your chamilo.conf file as we will need these for the cert request.</p>
<pre><code>sudo nano /etc/apache2/sites-available/chamilo.conf
</code></pre><p>Let&rsquo;s quickly recheck that our Apahce files are all good and then reload Apache incase we made changes.</p>
<pre><code>sudo apache2ctl configtest
sudo systemctl reload apache2
</code></pre><h3 id="allow-https-through-the-firewall">Allow HTTPS through the firewall</h3>
<p>Confirm the current status.</p>
<pre><code>sudo ufw status
</code></pre><p>If HTTP and HTTPS aren&rsquo;t allowed through, please refer back to the UFW setup above.</p>
<h3 id="obtain-ssl-certificate">Obtain SSL Certificate</h3>
<pre><code>sudo certbot --apache
</code></pre><p>A script will start to configure SSL.  You will be asked to give an email, and you must in order to receive notices of expiring certs.</p>
<p>When asked, agree to Let&rsquo;s Encrypt&rsquo;s TOS, by pressing <strong>A</strong>.</p>
<p>Certbot will then ask you which domains you want to get certs for.  This is where having accurate ServerName and ServerAlias details is important.</p>
<p>When asked whether you want to redirect traffic, chose option <code>2</code> for YES.  This will force all conenctions over HTTPS.</p>
<pre><code>Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
1: No redirect - Make no further changes to the webserver configuration.
2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for
new sites, or if you're confident your site works on HTTPS. You can undo this
change by editing your web server's configuration.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Select the appropriate number [1-2] then [enter] (press 'c' to cancel): 2

</code></pre><p>If you get the message below, you&rsquo;re golden!</p>
<pre><code>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Congratulations! You have successfully enabled https://your_domain and
https://www.your_domain

You should test your configuration at:
https://www.ssllabs.com/ssltest/analyze.html?d=your_domain
https://www.ssllabs.com/ssltest/analyze.html?d=www.your_domain
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/your_domain/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/your_domain/privkey.pem
   Your cert will expire on 2020-07-27. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot again
   with the &quot;certonly&quot; option. To non-interactively renew *all* of
   your certificates, run &quot;certbot renew&quot;
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le
</code></pre><p>You can confirm your SSL cert and it&rsquo;s grade over at [SSL Labs Server Test](<a href="https://www.ssllabs.com/ssltest/">SSL Server Test (Powered by Qualys SSL Labs)</a>).</p>
<h3 id="verify-certbot-auto-renewal">Verify Certbot Auto-Renewal</h3>
<p>Our certbot package will automatically auto-renew our certificate.  To check the status of this service, let&rsquo;s use:</p>
<pre><code>sudo systemctl status certbot.timer
</code></pre><p>Your output should look like this.</p>
<pre><code>Output
● certbot.timer - Run certbot twice daily
     Loaded: loaded (/lib/systemd/system/certbot.timer; enabled; vendor preset: enabled)
     Active: active (waiting) since Tue 2020-04-28 17:57:48 UTC; 17h ago
    Trigger: Wed 2020-04-29 23:50:31 UTC; 12h left
   Triggers: ● certbot.service

Apr 28 17:57:48 fine-turtle systemd[1]: Started Run certbot twice daily.
</code></pre><p>And if you want to test the renewal process, run this.</p>
<pre><code>sudo certbot renew --dry-run
</code></pre><h2 id="conclusion">Conclusion</h2>
<p>That&rsquo;s it! All should be working now.</p>
]]></content>
        </item>
        
        <item>
            <title>Seb Vettel deserves better</title>
            <link>https://dgibbs.me/posts/2020/08/seb-vettel-deserves-better/</link>
            <pubDate>Sat, 22 Aug 2020 06:46:08 -0300</pubDate>
            
            <guid>https://dgibbs.me/posts/2020/08/seb-vettel-deserves-better/</guid>
            <description>I&amp;rsquo;ve always enjoyed watching cars, or any reasonable vehicle, go around in circles.
Motorsport is a career I wish I could have entered, but never had the opportunity, finances or even remotely an ounce of the required skill and bravery.
So, I&amp;rsquo;ve had to settle for watching it on TV and playing video games. Lately, those games have evolved into simulator racing titles, which are both enjoyable and further evidence of my uselessness.</description>
            <content type="html"><![CDATA[<p>I&rsquo;ve always enjoyed watching cars, or any reasonable vehicle, go around in circles.</p>
<p>Motorsport is a career I wish I could have entered, but never had the opportunity, finances or even remotely an ounce of the required skill and bravery.</p>
<p>So, I&rsquo;ve had to settle for watching it on TV and playing video games.  Lately, those games have evolved into simulator racing titles, which are both enjoyable and further evidence of my uselessness.</p>
<p>Anyway, after spending some years really following F1 (about 8 years in a &lsquo;hardcore&rsquo; capacity), I feel I&rsquo;m something of a couch expert..ish.  And since this is my blog, I will spew my drivel.</p>
<h2 id="the-history">The history</h2>
<p>Seb Vettel is one of those drivers that I would call a &lsquo;typical multiple World Driver&rsquo;s Championship (WDC) winner&rsquo;.</p>
<p>By that I mean, somehow who has rightly earned themselves acclaim, but now believes that the systems of F1 work for their benefit alone.  If things do not go their way, all must bow and scrape to achieve what THEY want, because they feel entitled to it.</p>
<p>You can add Lewis Hamilton to that list, although he adds spades of hollow humility to it. At least in my opinion.</p>
<p>Seb, back in his heyday at RBR (Red Bull Racing) cleaned up.  He really was that good.  But as the modern era of F1 has proven, you can be a fantastic driver, but the lead team whose car is just objectively better than all others will streak ahead almost regardless of the driver.</p>
<p><em><strong>cough</strong></em> Mercedes <em><strong>cough</strong></em></p>
<p>Seb eventually moved to Ferrari as every driver bar none has dreamed to do.  The famed team with more toxicity than Chernobyl, but in a shiny red car.</p>
<h2 id="scuderia-arrogant-tools">Scuderia Arrogant Tools</h2>
<p>It&rsquo;s no secret that Ferrari has performed poorly in recent years for all manner of reasons we won&rsquo;t discuss here. However, their recent treatment of Seb is beyond disrespectful.</p>
<p>I&rsquo;m one of those people who believe that despite one&rsquo;s previous accolades, you still need to earn respect on a daily basis.</p>
<p><strong>Just be a decent human.</strong>  That&rsquo;s it.</p>
<p>In 2019, Ferrari started with Charles LeClerc.  The ridiculously good Monégasque is deserving of that seat. As always, Ferrari plays favourites and this led Seb to be the new #2.</p>
<p>Now Ferrari&rsquo;s internal politics aside, and all their internal issues of 2019, Seb still did not deserve to be fired in the way he was.</p>
<p>Massively paraphrasing, he received a <strong>phone call</strong> from team boss Mattia Binotto saying:</p>
<blockquote>
<p>Hey Seb.  Listen, we&rsquo;re cutting you at the end of 2020 and this is not open for discussion.  See you at the next race.</p>
</blockquote>
<p>Now that is some rubbish right there.</p>
<p>Fast forward some months, and we&rsquo;re 6 races into the contracted 2020 season.  Seb is running in races where his team fails to provide him with any kind of race strategy or even the courtesy of regular communication while in the car.</p>
<p>In the Spanish GP, he was doing maths on behalf of his team at 300+ kph because they couldn&rsquo;t be arsed to do it themselves, even after his teammate retired.  Imagine hating your driver so much that you are (seemingly) prepared to let your own team fail just to save face.</p>
<p>Very Ferrari.</p>
<p>Seb himself is clearly off his game, this much is clear.  But when your team is clearly putting no effort into your car, not preparing a strategy, and treating you with less respect than the gum under your shoes, you have really hit rock bottom and not much more can be expected.</p>
<h2 id="seb-is-still-respected-by-those-that-matter">Seb is still respected by those that matter</h2>
<p>Seb did show his class in Spain however. Managing to do half a race of horrible soft tyres and still ending in the points.  A truly super-human effort.</p>
<p>While I disliked Seb&rsquo;s attitude, especially when he was on top, he is clearly one of the best.  His achievements have proven this.  The <strong>countless</strong> of &lsquo;good-guy Seb&rsquo; videos on YouTube have proven quite convincingly that even today, with all his status, he absolutely thinks of everyone equally and respectfully.</p>
<p>A <a href="https://twitter.com/F1/status/1284823057492844545?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1284823057492844545%7Ctwgr%5E&amp;ref_url=https%3A%2F%2Fwww.essentiallysports.com%2Ff1-news-watch-sebastian-vettel-shows-his-class-yet-again-before-the-hungarian-grand-prix%2F">video</a> of him being interviewed pre-race in the rain by Sky Sports where he politely scolded Johnny Herbert for allowing his Sound Engineer to be rained on whilst he was under an umbrella comes to mind.</p>
<p>I hope that no other driver will need to undergo this kind of treatment (especially his new replacement Carlos Sainz, who I really like) and that his experience will serve as both a warning to drivers and teams alike.</p>
<p>There are many rumours linking Seb to the new Aston Martin Works team (or revised Racing Point depending on your views) for 2021.  Personally, I hope he goes there and drives circles around everyone like the machine that he is.</p>
<p>Especially those buggers in the red car.</p>
]]></content>
        </item>
        
        <item>
            <title>Hugo: Getting Started</title>
            <link>https://dgibbs.me/posts/2020/08/hugo-getting-started/</link>
            <pubDate>Mon, 10 Aug 2020 20:24:08 -0300</pubDate>
            
            <guid>https://dgibbs.me/posts/2020/08/hugo-getting-started/</guid>
            <description>Mike Dane rules.</description>
            <content type="html"><![CDATA[<p>Mike Dane rules.</p>
]]></content>
        </item>
        
    </channel>
</rss>
